<Window x:Class="SolarNG.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:vm="clr-namespace:SolarNG.ViewModel" xmlns:vmSettings="clr-namespace:SolarNG.ViewModel.Settings" xmlns:usercontrols="clr-namespace:SolarNG.UserControls" xmlns:ucSettings="clr-namespace:SolarNG.UserControls.Settings" xmlns:ct="clr-namespace:ChromeTabs" xmlns:ctConv="clr-namespace:ChromeTabs.Converters" xmlns:conv="clr-namespace:SolarNG.Converters" Title="SolarNG" Height="768" Width="1024" MinHeight="480" MinWidth="640" Background="{StaticResource bg1}" WindowStyle="SingleBorderWindow" AllowsTransparency="False" ResizeMode="CanResizeWithGrip" LocationChanged="Win_LocationChanged" Closing="Win_Closing" Closed="Win_Closed" StateChanged="Win_StateChanged" Loaded="MainWindow_OnLoaded" Activated="MainWindow_OnActivated" Deactivated="MainWindow_OnDeactivated">
  <WindowChrome.WindowChrome>
    <WindowChrome x:Name="Chrome" CaptionHeight="0" ResizeBorderThickness="10" GlassFrameThickness="1" />
  </WindowChrome.WindowChrome>
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <conv:BooleanToVisibilityConverter x:Key="booleanToVisibilityConv" />
      <DataTemplate x:Key="{DataTemplateKey {x:Type vm:AppTabViewModel}}" DataType="{x:Type vm:AppTabViewModel}">
        <usercontrols:UserControl1 />
      </DataTemplate>
      <DataTemplate x:Key="{DataTemplateKey {x:Type vm:OverviewTabViewModel}}" DataType="{x:Type vm:OverviewTabViewModel}">
        <usercontrols:OverviewTab />
      </DataTemplate>
      <DataTemplate x:Key="{DataTemplateKey {x:Type vmSettings:SettingsViewModel}}" DataType="{x:Type vmSettings:SettingsViewModel}">
        <ucSettings:SettingsGeneralLayout />
      </DataTemplate>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid Name="MainGrid">
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="16" />
    </Grid.RowDefinitions>
    <ct:ChromeTabControl x:Name="MyChromeTabControl" Grid.Row="0" MaximumTabWidth="200" MinimumTabWidth="50" TabPersistBehavior="All" TabPersistDuration="0:0:0:5" AddTabButtonBehavior="OpenNewTab" Background="{StaticResource t1}" SelectedTabBrush="{StaticResource t3}" AddTabButtonMouseDownBrush="{StaticResource t6}" AddTabButtonMouseOverBrush="{StaticResource t5}" TabOverlap="0" DragWindowWithOneTab="True" TabTearTriggerDistance="10" IsTabsFull="{Binding IsTabsFull}"  CanMoveTabs="{Binding CanMoveTabs}" ItemsSource="{Binding ItemCollection}" SelectedItem="{Binding SelectedTab}" IsAddButtonVisible="{Binding ShowAddButton}" CloseTabWhenDraggedOutsideBonds="False" AddTabCommand="{Binding AddTabCommand}" CloseTabCommand="{Binding CloseTabCommand}" CloseTabNoKillCommand="{Binding CloseTabNoKillCommand}" ReorderTabsCommand="{Binding ReorderTabsCommand}" FontFamily="{StaticResource Font1}">
      <Control.Template>
        <ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
          <FrameworkTemplate.Resources>
            <ResourceDictionary>
              <ctConv:TabPersistBehaviorToItemHolderVisibilityConverter x:Key="TabPersistBehaviorToItemHolderVisibilityConv" />
            </ResourceDictionary>
          </FrameworkTemplate.Resources>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="30" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="30" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="120" />
            </Grid.ColumnDefinitions>
            <Border Grid.Row="0" Grid.Column="0" Background="{TemplateBinding Control.Background}">
              <Grid Width="25" Height="25" Margin="0" MouseUp="TextBlockTriple_MouseUp">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type Grid}">
                    <Setter Property="FrameworkElement.Cursor" Value="Hand" />
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource t5}" />
                      </Trigger>
                      <DataTrigger Value="True" Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}">
                        <Setter Property="Background" Value="{StaticResource t5}" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Style>
                <Image Width="16" Height="16" ToolTip="{StaticResource Menu}" Source="./Images/menu.png" />
                <FrameworkElement.ContextMenu>
                  <ContextMenu Name="MainMenu" Placement="Bottom" Opened="ContextMenu_OnOpened" Closed="ContextMenu_OnClosed">
                    <MenuItem Header="{StaticResource NewSession}" Command="{Binding NewSessionCommand}" InputGestureText="{Binding CtrlE}" />
                    <MenuItem Header="{StaticResource NewTab}" Command="{Binding AddOverviewTabCommand}" InputGestureText="{Binding CtrlT}" />
                    <MenuItem Header="{StaticResource NewWindow}" Command="{Binding AddWindowCommand}" InputGestureText="{Binding CtrlN}" />
                    <MenuItem Header="{StaticResource NewHistory}" Command="{Binding OpenHistoryTabCommand}" InputGestureText="{Binding CtrlH}" />
                    <MenuItem Header="{StaticResource NewProcessTab}" Command="{Binding OpenProcessTabCommand}" Visibility="{Binding NewProcessTabVisible, Converter={StaticResource booleanToVisibilityConv}}"/>
                    <MenuItem Header="{StaticResource NewWindowTab}" Command="{Binding OpenWindowTabCommand}" Visibility="{Binding NewWindowTabVisible, Converter={StaticResource booleanToVisibilityConv}}"/>
                    <Separator Background="{StaticResource s1}" Margin="-30,0,0,0" />
                    <MenuItem Header="{StaticResource ImportSessions}" Command="{Binding ImportModelCommand}" />
                    <MenuItem Header="{StaticResource ExportSessions}" Command="{Binding ExportModelCommand}" />
                    <MenuItem Header="{StaticResource Settings}" Command="{Binding OpenSettingsCommand}" InputGestureText="{Binding CtrlS}" />
                    <MenuItem Header="{StaticResource About}" Command="{Binding AboutCommand}" />
                    <Separator Background="{StaticResource s1}" Margin="-30,0,0,0" />
                    <MenuItem Header="{StaticResource Exit}" InputGestureText="{Binding AltF4}" Click="ExitMenuItem_OnClick" />
                  </ContextMenu>
                </FrameworkElement.ContextMenu>
              </Grid>
            </Border>
            <Border Grid.Row="0" Grid.Column="1" Background="{TemplateBinding Control.Background}" Padding="0,0,10,0">
              <ct:ChromeTabPanel IsItemsHost="True" Background="{TemplateBinding Control.Background}" />
            </Border>
            <Border Grid.Row="0" Grid.Column="2" Background="{TemplateBinding Control.Background}" Padding="0,0,0,0">
              <Grid Column="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="40" />
                  <ColumnDefinition Width="40" />
                  <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Grid Column="0" MouseDown="TextBlockMinimize_MouseUp">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{StaticResource t5}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                  <Image Source="{StaticResource ImageMinimize}" Width="30" Height="30" />
                </Grid>
                <Grid Column="1" MouseUp="TextBlockMaximize_MouseUp">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{StaticResource t5}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                  <Image Name="ImageMaximizeNormalize" Source="{StaticResource ImageMaximized}" Width="30" Height="30" />
                </Grid>
                <Grid Column="2" MouseDown="TextBlockClose_MouseUp">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{StaticResource r0}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                  <Image Source="{StaticResource ImageClose}" Width="30" Height="30" />
                </Grid>
              </Grid>
            </Border>
            <Grid Name="PART_ItemsHolder" Row="1" Column="0" ColumnSpan="3" Visibility="{TemplateBinding TabPersistBehavior, Converter={StaticResource TabPersistBehaviorToItemHolderVisibilityConv}}" />
          </Grid>
        </ControlTemplate>
      </Control.Template>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}" ToolTip="{Binding TabName}">
            <UIElement.InputBindings>
              <MouseBinding MouseAction="MiddleClick" Command="{Binding CloseTabCommand, RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}" />
            </UIElement.InputBindings>
            <Border BorderThickness="0,0,0,2">
              <Border.BorderBrush>
                <SolidColorBrush Color="{Binding UnderlineColor}" />
              </Border.BorderBrush>
              <StackPanel Orientation="Horizontal" Background="#00FFFFFF">
                <Ellipse Width="9" Height="9" Margin="0,0,5,0" DockPanel.Dock="Left" VerticalAlignment="Center" Fill="{Binding TabColor}" Visibility="{Binding TabColorVisibility}" />
                <Image Stretch="Fill" Height="14" Width="14" Margin="0,5,5,5" Source="{Binding TabIcon}" Visibility="{Binding TabIconVisibility}" />
                <TextBlock Height="7" Margin="0,5,5,5" FontSize="7" Foreground="{Binding TabColor}" Text="{Binding TabColorName}" Visibility="{Binding TabColorNameVisibility}" />
                <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding TabName}" />
              </StackPanel>
            </Border>
            <FrameworkElement.ContextMenu>
              <ContextMenu FontWeight="Normal" Opened="ContextMenu_OnOpened" Closed="ContextMenu_OnClosed">
                <MenuItem Header="{StaticResource Duplicate}" Visibility="{Binding DuplicateTabCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding DuplicateTabCommand}" />
                <MenuItem Header="{StaticResource Reconnect}" Visibility="{Binding ReconnectCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding ReconnectCommand}" InputGestureText="{Binding CtrlF5}" />
                <MenuItem Header="{StaticResource Edit}" Visibility="{Binding EditCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding EditCommand}" />
                <MenuItem Header="SFTP" Visibility="{Binding SFTPCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding SFTPCommand}" />
                <MenuItem Header="SCP" Visibility="{Binding SCPCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding SCPCommand}" />
                <MenuItem Header="{Binding Menu_OrderBy}" Visibility="{Binding OrderByCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding OrderByCommand}" />
                <Separator Background="{StaticResource s1}" Margin="-30,0,0,0" Visibility="{Binding KickAllCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" />
                <MenuItem Header="{StaticResource SwitchWinTitleBar}" Visibility="{Binding SwitchWindowTitleBarCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding SwitchWindowTitleBarCommand}" />
                <MenuItem Header="{StaticResource Kick}" Visibility="{Binding KickCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding KickCommand}" />
                <MenuItem Header="{StaticResource KickAll}" Visibility="{Binding KickAllCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" Command="{Binding KickAllCommand}" />
                <Separator Background="{StaticResource s1}" Margin="-30,0,0,0" Visibility="{Binding KickAllCommandVisible, Converter={StaticResource booleanToVisibilityConv}}" />
                <MenuItem Header="{StaticResource Detach}" Command="{Binding DetachCommand}" CommandParameter="{Binding}" />
                <MenuItem Header="{StaticResource Close}" Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" InputGestureText="{Binding CtrlW}" />
                <MenuItem Header="{StaticResource CloseAll}" Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <MenuItem Header="{StaticResource CloseOtherTabs}" Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding}" />
              </ContextMenu>
            </FrameworkElement.ContextMenu>
          </Grid>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ct:ChromeTabControl>
    <Grid Row="1" Background="{StaticResource t1}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="8" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Image Grid.Column="1" Source="./Images/app.png" Width="16" Height="16" HorizontalAlignment="Left" Margin="0"/>
      <TextBlock Grid.Column="2" Name="Product" Foreground="{StaticResource g0}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
      <TextBlock Grid.Column="3" Name="Copyright" Foreground="{StaticResource g0}" VerticalAlignment="Center" HorizontalAlignment="Right" FontWeight="Regular" Margin="0,0,15,0" />
    </Grid>
  </Grid>
</Window>